FIELD
{
    .1172.统计年份;
    .1172.统计月份;
    .1172.开始日期;
    .1172.结束日期;

    .1098.员工状态;
    .1098.UserName;
    .1098.姓名;
    .1098.现属部门;
    .1098.入职日期;
    .1098.合同起始日;
    .1098.现任岗位;

    .1139.UserName1;
    .1139.状态;
    .1139.实际加班起始日期;
    .1139.实际加班共计小时数;
    .1139.考勤年月;

    .1044.UserName1;
    .1044.状态;
    .1044.调休共计;
    .1044.调休起始日期;
    .1044.考勤年月;

    .1138.UserName1;
    .1138.状态;
    .1138.请假起始日期;
    .1138.请假共计;
    .1138.假别;
    .1138.考勤年月;

    .1214.UserName;
    .1214.姓名;
    .1214.GroupID;
    .1214.考勤年月;
    .1214.开始日期;
    .1214.截止日期;
    .1214.本月加班小时;
    .1214.本月调休小时;
    .1214.本月请假天数;
    .1214.其中事假小时;
    .1214.其中病假小时;
    .1214.请假天数临时存放;
    .1214.本月透支调休时间;
    .1214.应扣薪透支调休时间;

    .1214.年假共计;
    .1214.已休年假;
    .1214.剩余年假;
    .1214.事假天数;
    .1214.病假天数;
    .1214.请假信息;

    .1214.本月剩余小时;
    .1214.上月剩余小时;
    .1214.考勤年月;

    .1168.弹性调休时间;
    .1168.弹性调休次数;
    .1168.工作时长;

    .1143.当前月份;
    .1143.当前季度;
    .1143.月度加班累计;
    .1143.月请假累计;
    .1143.月事假累计;
    .1143.月病假累计;
    .1143.月其他所有请假;
    .1143.年度其他所有请假;
    .1143.弹性调休剩余次数;
    .1143.月调休可透支时间;
    .1143.上月调休透支时间;
    .1143.季度加班累计;
    .1143.个人季度加班上限;
    .1143.季度已调休累计;
    .1143.可调休共计;
    .1143.本季度可调休;
    .1143.上季度剩余调休;
    .1143.可休年假;
    .1143.已休年假;
    .1143.年假共计;

    .1151.年度加班累计;

    .1167.年度已调休累计;

    .1144.月哺乳假;
    .1144.月产假;
    .1144.月婚假;
    .1144.月丧假;
    .1144.月照顾假;
    .1144.月其他请假;
    .1144.年度请假累计;
    .1144.年度事假累计;
    .1144.年度病假累计;
    .1144.年度哺乳假;
    .1144.年度产假;
    .1144.年度婚假;
    .1144.年度丧假;
    .1144.年度照顾假;
    .1144.年度其他请假;

    .1235.事件状态;
    .1235.处理人姓名;
    .1235.处理人工号;
    .1235.处理人职务;
    .1235.处理人部门;
    .1235.处理日期;
    .1235.审批状态;
    .1235.LinkToFormID;
    .1235.LinkToFormPage;
    .1235.提交人姓名;
    .1235.提交人工号;
    .1235.内容;
    .1235.提交日期;

    .1245.待办事项标记;
    .1245.状态;
    .1245.入职时间;
    .1245.合同时间;

    .1087.姓名;
}
VAR
{
    String S员工状态, S统计年份, S统计月份, S下一统计年份, S下一统计月份, S上一统计年份;
    String S上一统计月份, S开始日期, S结束日期, S下一开始日期, S下一结束日期, S员工工号;
    String S查找在职员工条件, S部门, S姓名, S职位, S查找加班条件1, S查找加班条件2, S查找调休条件1;
    String S查找调休条件2, S申请单状态, S查找调休条件, S本月调休单状态,S下月调休单状态, S查找请假条件;
    String S请假信息, S年假信息, S事假信息, S病假信息, S哺乳假信息, S婚假信息, S照顾假信息, S产假信息, S丧假信息;
    String S其他假信息, jb, S考勤年月, S上一考勤年月, S查找是否已考勤过条件, 季度最后月份s, 提交日期s;
    String 入职时间s, 合同时间s, S更新当前月份, S更新当前季度, content;
    Struct2 ST2查找在职员工, ST2查找本月加班单, ST2查找下月加班单, ST2查找本月调休单;
    Struct2 ST2查找下月调休单, st23, st231, st24, S查找是否已考勤过, st查找上月剩余小时;
    int cp, is_continue, I统计月份, I下一月份, I上一月份, I统计年份, I下一年份, I上一年份;
    int np, rec, I本月考勤标记, I下月考勤标记, rec上月记录, red2,red21, red3, red5, flag;
    int I在职人数, i, I本月加班单数, I下月加班单数, i1, i2, cc3, cc31, i3, i31, cc4, i4, I弹性次数,newPage2;
    double D本月加班小时, D下月加班小时, D当前本月申请单实际加班小时, D当前下月申请单实际加班小时;
    double D本月调休小时, D下月调休小时, D下月已通过调休小时, D当前本月申请单调休小时;
    double D当前下月申请单调休小时, D下月申请单调休小时, D当前申请单请假时间, D当月年假天数;
    double D当月病假小时, D当月病假天数, D当月事假小时, D当月事假天数, D当月哺乳假天数;
    double D当月婚假天数, D当月丧假天数, D当月产假天数, D当月照顾假天数, D当月其他请假天数;
    double D本月请假天数, D年假共计, D已休年假, D剩余年假, D月请假累计, D月病假累计, D月事假累计;
    double D月其他所有请假, D年度其他所有请假, D月哺乳假累计, D月产假累计, D月婚假累计;
    double D月丧假累计, D月照顾假累计, D月其他假累计, ling, D弹性调休时间, D实际剩余可调休;
    double 本季度可调休d, 上季度剩余调休d, D原来下月剩余可调休, D上月剩余小时;
    double D上月透支调休, D工作时长, D本月已透支调休, D下月已透支调休, D月调休可透支时间;
    double D本月未补透支, slsytzsj, D扣薪透支时间, 事假天数d, 病假天数d, 季度加班累计d;
    double 季度已调休累计d, D哺乳假累计, D产假累计, D婚假累计, D丧假累计, D照顾假累计, D其他请假累计;
}
CLIENT
{
    cp =FW_GetCurrentRecNum();
    S统计年份 = FW_GetValue(1172,统计年份,cp);
    if(S统计年份 == "")
    {
        FW_Dialog1(请填写"统计年份");
        return(0);
    }
    S统计月份 = FW_GetValue(1172,统计月份,cp);
    if(S统计月份 == "")
    {
        FW_Dialog1(请填写"统计月份");
        return(0);
    }
    is_continue = FW_Dialog1(即将开始计算月考勤，这可能会花费一些时间，请按“继续”并请耐心等待完成提示。);
    if(is_continue == 0)
    {
        return(0);
    }
    S考勤年月 = S统计年份 + S统计月份;
    I统计月份 = S统计月份.toIntege;
    I下一月份 = I统计月份 + 1;
    I统计年份 = S统计年份.toIntege;
    I下一年份 = I统计年份;
    if(I下一月份 > 12)
    {
        I下一月份 = 1;
        I下一年份 = I统计年份 + 1;
    }
    S下一统计月份 = I下一月份.toString;
    S下一统计年份 = I下一年份.toString;
    S下一开始日期 = S下一统计年份 + "/" + S下一统计月份 + "/01";
    S下一结束日期 = S下一统计年份 + "/" + S下一统计月份 + "/31";
    I上一月份 = I统计月份 - 1;
    I上一年份 = I统计年份;
    if(I上一月份 < 1)
    {
        I上一月份 = 12;
        I上一年份 = I统计年份 - 1;
    }
    S上一统计月份 = I上一月份.toString;
    S上一统计年份 = I上一年份.toString;
    S上一考勤年月 = S上一统计年份 + "年" + S上一统计月份 + "月";
    S开始日期 = FW_GetValue(1172,开始日期,cp);
    if(S开始日期 == "")
    {
        FW_Dialog1(请填写"开始日期");
        return(0);
    }
    S结束日期 = FW_GetValue(1172,结束日期,cp);
    if(S结束日期 == "")
    {
        FW_Dialog1(请填写"结束日期");
        return(0);
    }
    S员工状态 = "在职";
    S申请单状态 = "已通过";
}
SERVER
{
    flag = 0;
    ling = 0.00;
    //排除重复计算的问题
    S查找是否已考勤过条件 = "1214, S考勤年月@考勤年月";
    S查找是否已考勤过=FW_FindRecords(S查找是否已考勤过条件,1);
    if(S查找是否已考勤过.mError==0)
    {
        flag = 1;
        return(GotoClient);
    }

    S查找在职员工条件 = "1098,S员工状态@员工状态";
    ST2查找在职员工 = FW_FindRecords(S查找在职员工条件,0);
    I在职人数 = ST2查找在职员工.count;

    D弹性调休时间 = FW_GetValue(1168,弹性调休时间,0);
    D工作时长 = FW_GetValue(1168,工作时长,0);
    for(i=0;i<I在职人数;i++)
    {
        rec = ST2查找在职员工.RecordNoList.Get[i];
        S员工工号 = FW_GetValue(1098,UserName,rec);
        S部门 = FW_GetValue(1098,现属部门,rec);
        S姓名 = FW_GetValue(1098,姓名,rec);
        S职位 = FW_GetValue(1098,现任岗位,rec);
        I弹性次数 = FW_GetValue(1168,弹性调休次数,0);

        np = FW_AddNewPage_w(1214);
        FW_SetValue_w(1214,UserName,np,S员工工号);
        FW_SetValue_w(1214,姓名,np,S姓名);
        FW_SetValue_w(1214,GroupID,np,S部门);
        FW_SetValue_w(1214,考勤年月,np,S考勤年月);
        FW_SetValue_w(1214,开始日期,np,S开始日期);
        FW_SetValue_w(1214,截止日期,np,S结束日期);

        //计算当月加班并更新考勤单
        S查找加班条件1="1139,S员工工号@UserName1,S申请单状态@状态,RANGE(S开始日期-S结束日期)@实际加班起始日期";
        ST2查找本月加班单=FW_FindRecords( S查找加班条件1,0 );
        I本月加班单数=ST2查找本月加班单.count;
        D本月加班小时 = 0.00;
        for(i1=0;i1<I本月加班单数;i1++)
        {
            I本月考勤标记=ST2查找本月加班单.RecordNoList.Get[i1];
            D当前本月申请单实际加班小时 = FW_GetValue(1139,实际加班共计小时数,I本月考勤标记);
            FW_SetValue_w(1139,考勤年月,I本月考勤标记,S考勤年月);
            D本月加班小时 = D本月加班小时 + D当前本月申请单实际加班小时;
        }
        FW_SetValue_w(1214,本月加班小时,np,D本月加班小时);
        if(D本月加班小时 == ling)
        {
            FW_SetValue_w(1214,本月加班小时,np,"");
        }
        //计算下月加班
        S查找加班条件2="1139,S员工工号@UserName1,S申请单状态@状态,RANGE(S下一开始日期-S下一结束日期)@实际加班起始日期";
        ST2查找下月加班单=FW_FindRecords( S查找加班条件2,0 );
        I下月加班单数=ST2查找下月加班单.count;
        D下月加班小时 = 0.00;
        for(i2=0;i2<I下月加班单数;i2++)
        {
            I下月考勤标记=ST2查找下月加班单.RecordNoList.Get[i2];
            D当前下月申请单实际加班小时 = FW_GetValue(1139,实际加班共计小时数,I下月考勤标记);
            D下月加班小时 = D下月加班小时 + D当前下月申请单实际加班小时;
        }
        FW_SetValue_w(1143,月度加班累计,rec,D下月加班小时);

        //计算当月调休并更新考勤单
        S查找调休条件1="1044,S员工工号@UserName1,RANGE(S开始日期-S结束日期)@调休起始日期";
        st23=FW_FindRecords( S查找调休条件1,0 );
        cc3=st23.count;
        D本月调休小时 = 0.00;
        for(i3=0;i3<cc3;i3++)
        {
            red2=st23.RecordNoList.Get[i3];
            S本月调休单状态 = FW_GetValue(1044,状态,red2);
            if((S本月调休单状态 != "未通过作废")&&(S本月调休单状态 != "已通过作废")&&(S本月调休单状态 != "待提交"))
            {
                D当前本月申请单调休小时 = FW_GetValue(1044,调休共计,red2);
                FW_SetValue_w(1044,考勤年月,red2,S考勤年月);
                D本月调休小时 = D本月调休小时 + D当前本月申请单调休小时;
            }
        }
        FW_SetValue_w(1214,本月调休小时,np,D本月调休小时);
        if(D本月调休小时 == ling)
        {
            FW_SetValue_w(1214,本月调休小时,np,"");
        }
        //计算下月调休并更新弹性调休次数
        S查找调休条件2="1044,S员工工号@UserName1,RANGE(S下一开始日期-S下一结束日期)@调休起始日期";
        st231=FW_FindRecords( S查找调休条件2,0 );
        cc31=st231.count;
        D下月调休小时 = 0.00;
        D下月已通过调休小时 = 0.00;
        for(i31=0;i31<cc31;i31++)
        {
            red21=st231.RecordNoList.Get[i31];
            S下月调休单状态 = FW_GetValue(1044,状态,red21);
            if((S下月调休单状态 != "未通过作废")&&(S下月调休单状态 != "已通过作废")&&(S下月调休单状态 != "待提交"))
            {
                if(S下月调休单状态 == "已通过")
                {
                    D下月申请单调休小时 = FW_GetValue(1044,调休共计,red21);
                    D下月已通过调休小时 = D下月申请单调休小时 + D下月已通过调休小时;
                }
                D当前下月申请单调休小时 = FW_GetValue(1044,调休共计,red21);
                if(D当前下月申请单调休小时 < D弹性调休时间)
                {
                    I弹性次数 = I弹性次数 - 1;
                    if(I弹性次数 < 0)
                    {
                        I弹性次数 = 0;
                    }
                }
                D下月调休小时 = D下月调休小时 + D当前下月申请单调休小时;
            }
        }
        FW_SetValue_w(1143,弹性调休剩余次数,rec,I弹性次数);

        //计算当月请假并更新到考勤确认单
        S查找请假条件="1138,S员工工号@UserName1,S申请单状态@状态,RANGE(S开始日期-S结束日期)@请假起始日期";
        st24=FW_FindRecords( S查找请假条件,0 );
        cc4=st24.count;
        D本月请假天数 = 0.00;
        D当月年假天数 = 0.00;
        D当月病假小时 = 0.00;
        D当月病假天数 = 0.00;
        D当月事假小时 = 0.00;
        D当月事假天数 = 0.00;
        D当月哺乳假天数 = 0.00;
        D当月产假天数 = 0.00;
        D当月婚假天数 = 0.00;
        D当月丧假天数 = 0.00;
        D当月照顾假天数 = 0.00;
        D当月其他请假天数 = 0.00;
        S请假信息 = "";
        for(i4=0;i4<cc4;i4++)
        {
            red3=st24.RecordNoList.Get[i4];
            D当前申请单请假时间 = FW_GetValue(1138,请假共计,red3);
            jb = FW_GetValue(1138,假别,red3);
            if(jb == "年假")
            {
                D当月年假天数 = D当月年假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月年假天数);
                S年假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S年假信息 = "年假：" + S年假信息 + "天；";
            }else if(jb == "病假")
            {
                D当月病假小时 = D当前申请单请假时间 + D当月病假小时;
                D当前申请单请假时间 = D当前申请单请假时间/D工作时长;
                D当月病假天数 = D当月病假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月病假天数);
                S病假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S病假信息 = "病假：" + S病假信息 + "天；";
            }else if(jb == "事假")
            {
                D当月事假小时 = D当前申请单请假时间 + D当月事假小时;
                D当前申请单请假时间 = D当前申请单请假时间/D工作时长;
                D当月事假天数 = D当月事假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月事假天数);
                S事假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S事假信息 = "事假：" + S事假信息 + "天；";
            }else if(jb == "哺乳假")
            {
                D当月哺乳假天数 = D当月哺乳假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月哺乳假天数);
                S哺乳假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S哺乳假信息 = "哺乳假：" + S哺乳假信息 + "天；";
            }else if(jb == "产假")
            {
                D当月产假天数 = D当月产假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月产假天数);
                S产假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S产假信息 = "产假：" + S产假信息 + "天；";
            }else if(jb == "婚假")
            {
                D当月婚假天数 = D当月婚假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月婚假天数);
                S婚假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S婚假信息 = "婚假：" + S婚假信息 + "天；";
            }else if(jb == "丧假")
            {
                D当月丧假天数 = D当月丧假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月丧假天数);
                S丧假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S丧假信息 = "丧假：" + S丧假信息 + "天；";
            }else if(jb == "照顾假")
            {
                D当月照顾假天数 = D当月照顾假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月照顾假天数);
                S照顾假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S照顾假信息 = "照顾假：" + S照顾假信息 + "天；";
            }else if(jb == "其他")
            {
                D当月其他请假天数 = D当月其他请假天数 + D当前申请单请假时间;
                FW_SetValue_w(1214, 请假天数临时存放, np, D当月其他请假天数);
                S其他假信息 = FW_GetValue(1214, 请假天数临时存放, np);
                S其他假信息 = "其他假：" + S其他假信息 + "天；";
            }
            FW_SetValue_w(1138,考勤年月,red3,S考勤年月);
            D本月请假天数 = D本月请假天数 + D当前申请单请假时间;
        }
        if(D当月年假天数 != 0)
        {
            S请假信息 = S年假信息;
        }
        if(D当月事假天数 != 0)
        {
            S请假信息 = S请假信息 + S事假信息;
        }
        if(D当月病假天数 != 0)
        {
            S请假信息 = S请假信息 + S病假信息;
        }
        if(D当月哺乳假天数 != 0)
        {
            S请假信息 = S请假信息 + S哺乳假信息;
        }
        if(D当月产假天数 != 0)
        {
            S请假信息 = S请假信息 + S产假信息;
        }
        if(D当月照顾假天数 != 0)
        {
            S请假信息 = S请假信息 + S照顾假信息;
        }
        if(D当月婚假天数 != 0)
        {
            S请假信息 = S请假信息 + S婚假信息;
        }
        if(D当月丧假天数 != 0)
        {
            S请假信息 = S请假信息 + S丧假信息;
        }
        if(D当月其他请假天数 != 0)
        {
            S请假信息 = S请假信息 + S其他假信息;
        }
        FW_SetValue_w(1214,本月请假天数,np,D本月请假天数);
        if(D本月请假天数 == 0.00)
        {
            FW_SetValue_w(1214,本月请假天数,np,"");
        }
        FW_SetValue_w(1214, 请假信息, np, S请假信息);

        //上月调休剩余小时
        D上月剩余小时 = ling;
        st查找上月剩余小时 = FW_FindRecords("1214,S上一考勤年月@考勤年月,S员工工号@UserName",1);
        if(st查找上月剩余小时.mError == 0)
        {
            rec上月记录 = st查找上月剩余小时.RecordNoList.Get[0];
            D上月剩余小时 = FW_GetValue(1214,本月剩余小时,rec上月记录);
            FW_SetValue_w(1214,上月剩余小时,np,D上月剩余小时);
        }
        if(D上月剩余小时 == ling)
        {
            FW_SetValue_w(1214,上月剩余小时,np,"");
        }

        //原来下月剩余可调休小时
        D实际剩余可调休 = FW_GetValue(1143, 可调休共计, rec);
        D原来下月剩余可调休 = D上月剩余小时 + D本月加班小时 - D本月调休小时;
        FW_SetValue_w(1214,本月剩余小时,np,D原来下月剩余可调休);
        if(D原来下月剩余可调休 == ling)
        {
            FW_SetValue_w(1214,本月剩余小时,np,"");
        }

        //月调休可能包含本月和下月
        D实际剩余可调休 = D原来下月剩余可调休 + D下月加班小时 - D下月调休小时;
        D月调休可透支时间 = FW_GetValue(1143,月调休可透支时间,rec);
        D上月透支调休 = FW_GetValue(1143,上月调休透支时间,rec);
        D本月已透支调休 = ling;
        if(D原来下月剩余可调休 < ling)
        {
            //本月实际透支
            D本月已透支调休 = 100 - D原来下月剩余可调休 - 100;
            D月调休可透支时间 = D月调休可透支时间 + D本月已透支调休;
            //上月透支未补完直接扣薪，并在可调休共计中恢复相应时间
            if(D上月透支调休 > ling)
            {
                D实际剩余可调休 = D实际剩余可调休 + D上月透支调休;
                D月调休可透支时间 = D月调休可透支时间 - D上月透支调休;
                D本月已透支调休 = D本月已透支调休 - D上月透支调休;
            }
            if(D月调休可透支时间 > 7.50)
            {
                D月调休可透支时间 = 7.50;
            }
        }
        D扣薪透支时间 = D上月透支调休;
        if(D扣薪透支时间 < ling)
        {
            D扣薪透支时间 = 0.00;
        }
        FW_SetValue_w(1214,应扣薪透支调休时间,np,D扣薪透支时间);
        if(D扣薪透支时间 == 0.00)
        {
            FW_SetValue_w(1214,应扣薪透支调休时间,np,"");
        }
        FW_SetValue_w(1143,月调休可透支时间,rec,D月调休可透支时间);
        FW_SetValue_w(1143,上月调休透支时间,rec,D本月已透支调休);
        FW_SetValue_w(1214,本月透支调休时间,np,D本月已透支调休);
        if(D本月已透支调休 == 0.00)
        {
            FW_SetValue_w(1214,本月透支调休时间,np,"");
        }
        FW_SetValue_w(1143,可调休共计,rec,D实际剩余可调休);

        //取得年假数值更新到考勤确认单
        D年假共计 = FW_GetValue(1143,年假共计,rec);
        FW_SetValue_w(1214,年假共计,np,D年假共计);
        if(D年假共计 == 0)
        {
            FW_SetValue_w(1214,年假共计,np,"");
        }
        D已休年假 = FW_GetValue(1143,已休年假,rec);
        FW_SetValue_w(1214,已休年假,np,D已休年假);
        if(D已休年假 == 0)
        {
            FW_SetValue_w(1214,已休年假,np,"");
        }
        D剩余年假 = FW_GetValue(1143,可休年假,rec);
        FW_SetValue_w(1214,剩余年假,np,D剩余年假);
        if(D剩余年假 == 0)
        {
            FW_SetValue_w(1214,剩余年假,np,"");
        }

        //扣掉本月时间，更新下月请假数据
        D月请假累计 = FW_GetValue(1143,月请假累计,rec);
        D月病假累计 = FW_GetValue(1143,月病假累计,rec);
        D月事假累计 = FW_GetValue(1143,月事假累计,rec);

        D哺乳假累计 = FW_GetValue(1144,月哺乳假,rec);
        D产假累计 = FW_GetValue(1144,月产假,rec);
        D婚假累计 = FW_GetValue(1144,月婚假,rec);
        D丧假累计 = FW_GetValue(1144,月丧假,rec);
        D照顾假累计 = FW_GetValue(1144,月照顾假,rec);
        D其他请假累计 = FW_GetValue(1144,月其他请假,rec);

        D月请假累计 = D月请假累计 - D本月请假天数;
        if(D月请假累计 < ling)
        {
            D月请假累计 = 0.00;
        }
        FW_SetValue_w(1143,月请假累计,rec,D月请假累计);

        D月病假累计 = D月病假累计 - D当月病假小时;
        if(D月病假累计 < ling)
        {
            D月病假累计 = 0.00;
        }
        FW_SetValue_w(1143,月病假累计,rec,D月病假累计);

        D月事假累计 = D月事假累计 - D当月事假小时;
        if(D月事假累计 < ling)
        {
            D月事假累计 = 0.00;
        }
        FW_SetValue_w(1143,月事假累计,rec,D月事假累计);

        D月其他所有请假 = D月请假累计 - D当月年假天数 - D当月事假天数 - D当月病假天数;
        if(D月其他所有请假 < ling)
        {
            D月其他所有请假 = 0.00;
        }
        FW_SetValue_w(1143, 月其他所有请假, rec, D月其他所有请假);

        D哺乳假累计 = D哺乳假累计 - D当月哺乳假天数;
        if(D哺乳假累计 < ling)
        {
            D哺乳假累计 = 0.00;
        }
        FW_SetValue_w(1144, 月哺乳假, rec, D哺乳假累计);

        D产假累计 = D产假累计 - D当月产假天数;
        if(D产假累计 < ling)
        {
            D产假累计 = 0.00;
        }
        FW_SetValue_w(1144, 月产假, rec, D产假累计);

        D婚假累计 = D婚假累计 - D当月婚假天数;
        if(D婚假累计 < ling)
        {
            D婚假累计 = 0.00;
        }
        FW_SetValue_w(1144, 月婚假, rec, D婚假累计);

        D丧假累计 = D丧假累计 - D当月丧假天数;
        if(D丧假累计 < ling)
        {
            D丧假累计 = 0.00;
        }
        FW_SetValue_w(1144, 月丧假, rec, D丧假累计);

        D照顾假累计 = D照顾假累计 - D当月照顾假天数;
        if(D照顾假累计 < ling)
        {
            D照顾假累计 = 0.00;
        }
        FW_SetValue_w(1144, 月照顾假, rec, D照顾假累计);

        D其他请假累计 = D其他请假累计 - D当月其他请假天数;
        if(D其他请假累计 < ling)
        {
            D其他请假累计 = 0.00;
        }
        FW_SetValue_w(1144, 月其他请假, rec, D其他请假累计);

//填写当月考勤待确认信息
        入职时间s = FW_GetValue(1098,入职日期,rec);
        合同时间s = FW_GetValue(1098,合同起始日,rec);
        FW_SetValue_w(1245,入职时间,np,入职时间s);
        FW_SetValue_w(1245,合同时间,np,合同时间s);
        FW_SetValue_w(1245,状态,np,"已通过");
        S更新当前月份 = S下一统计年份 + "年" + S下一统计月份 + "月";
        FW_SetValue_w(1143,当前月份,rec,S更新当前月份);
        季度最后月份s = S考勤年月.Mid(5);

//季度数据更新
        if((季度最后月份s == "3月")||(季度最后月份s == "6月")||(季度最后月份s == "9月")||(季度最后月份s == "12月"))
        {
            本季度可调休d = FW_GetValue(1143,本季度可调休,rec);
            if(本季度可调休d > D下月加班小时)
            {
                上季度剩余调休d = FW_GetValue(1143,上季度剩余调休,rec);
                上季度剩余调休d = 本季度可调休d - D下月加班小时 + 上季度剩余调休d;
                FW_SetValue_w(1143,上季度剩余调休,rec,上季度剩余调休d);
                FW_SetValue_w(1143,本季度可调休,rec,D下月加班小时);
            } 
            if(I下一月份 <= 3)
            {
                S更新当前季度 = S下一统计年份 + "年" + "第一季度";
            }else if(I下一月份 <= 6)
            {
                S更新当前季度 = S下一统计年份 + "年" + "第二季度";
            }else if(I下一月份 <= 9)
            {
                S更新当前季度 = S下一统计年份 + "年" + "第三季度";
            }else if(I下一月份 <= 12)
            {
                S更新当前季度 = S下一统计年份 + "年" + "第四季度";
            }
            FW_SetValue_w(1143,当前季度,rec,S更新当前季度);
            FW_SetValue_w(1143,季度加班累计,rec,D下月加班小时);
            FW_SetValue_w(1143,季度已调休累计,rec,D下月已通过调休小时);

            //年度数据更新
            if(季度最后月份s == "12月")
            {
                FW_SetValue_w(1151,年度加班累计,rec,D下月加班小时);

                FW_SetValue_w(1167,年度已调休累计,rec,D下月已通过调休小时);

                FW_SetValue_w(1144, 年度请假累计, rec, D月事假累计);

                FW_SetValue_w(1143, 年度其他所有请假, rec, D月其他所有请假);

                FW_SetValue_w(1144, 年度病假累计,rec,D月病假累计);
                FW_SetValue_w(1144, 年度事假累计, rec, D月事假累计);
                FW_SetValue_w(1144, 年度哺乳假, rec, D哺乳假累计);
                FW_SetValue_w(1144, 年度产假, rec, D产假累计);
                FW_SetValue_w(1144, 年度婚假, rec, D婚假累计);
                FW_SetValue_w(1144, 年度丧假, rec, D丧假累计);
                FW_SetValue_w(1144, 年度照顾假, rec, D照顾假累计);
                FW_SetValue_w(1144, 年度其他请假, rec, D其他请假累计);
            }
        }

//创建代办事项
        newPage2 = FW_AddNewPage_w(1235);
        提交日期s = FW_GetSysDate(0);
        FW_SetValue_w(1245,待办事项标记,np,newPage2);

        FW_SetValue_w(1235,事件状态,newPage2,"待处理");
        FW_SetValue_w(1235,处理人姓名,newPage2,S姓名);
        FW_SetValue_w(1235,处理人工号,newPage2,S员工工号);
        FW_SetValue_w(1235,处理人职务,newPage2,S职位);
        FW_SetValue_w(1235,处理人部门,newPage2,S部门);
        FW_SetValue_w(1235,处理日期,newPage2,"");
        FW_SetValue_w(1235,审批状态,newPage2,"待本人核对确认");
        FW_SetValue_w(1235,LinkToFormID,newPage2,1245);
        FW_SetValue_w(1235,LinkToFormPage,newPage2,np);
        FW_SetValue_w(1235,提交人姓名,newPage2,"");
        FW_SetValue_w(1235,提交人工号,newPage2,"");
        content = S考勤年月 + "考勤单";
        FW_SetValue_w(1235,内容,newPage2,content);
        FW_SetValue_w(1235,提交日期,newPage2,提交日期s);
    }
    return(GotoClient);
} 
CLIENT
{
    if(flag == 1)
    {
        FW_Dialog1(该月份的考勤已经计算过！);
        return(0);
    }
    FW_Dialog1(系统自动统计完成);
}